<UserControl x:Class="Aitoe.Vigilant.Controller.WpfController.Views.MultiControllerView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:c="clr-namespace:CalcBinding;assembly=CalcBinding"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:local="clr-namespace:Aitoe.Vigilant.Controller.WpfController.Views"
             xmlns:localInfra="clr-namespace:Aitoe.Vigilant.Controller.WpfController.Infra"
             xmlns:localInfraVC="clr-namespace:Aitoe.Vigilant.Controller.WpfController.Infra.ValueConverters"
             xmlns:localCustomControls="clr-namespace:Aitoe.Vigilant.Controller.WpfController.CustomControls"
             xmlns:localV="clr-namespace:Aitoe.Vigilant.Controller.WpfController.Views"
             xmlns:localVM="clr-namespace:Aitoe.Vigilant.Controller.WpfController.ViewModel"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:cmd="clr-namespace:GalaSoft.MvvmLight.Command;assembly=GalaSoft.MvvmLight.Platform"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">
    <UserControl.Resources>
        <Storyboard x:Key="sbShowLeftMenu" >
            <ThicknessAnimation Storyboard.TargetProperty="Margin" From="-100,0,0,0" To="0,0,0,0" DecelerationRatio=".9" Duration="0:0:0.15" />
        </Storyboard>
        <Storyboard x:Key="sbHideLeftMenu" >
            <ThicknessAnimation Storyboard.TargetProperty="Margin" From="0,0,0,0" To="-100,0,0,0" AccelerationRatio=".9" Duration="0:0:0.15" />
        </Storyboard>

        <DataTemplate DataType="{x:Type localVM:VigilantGridViewModel}">
            <localV:VigilantGridView />
        </DataTemplate>
        <localInfraVC:MultiplyConverter x:Key="MultiplyConverter" />
    </UserControl.Resources>
    <DockPanel>
        <DockPanel.Background>
            <ImageBrush ImageSource="{Binding HomeBackgroundOpaque}"/>
        </DockPanel.Background>
        <StackPanel Panel.ZIndex="2" Name="pnlLeftMenu" Orientation="Horizontal" HorizontalAlignment="Left" Margin="0,0,0,0">
            <StackPanel.Style>
                <Style TargetType="StackPanel">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=ShowHideLeftMenu}" Value="Show">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard Name="ShowAnimation">
                                    <Storyboard>
                                        <Storyboard>
                                            <StaticResource ResourceKey="sbShowLeftMenu"/>
                                        </Storyboard>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                            <DataTrigger.ExitActions>
                                <BeginStoryboard Name="HideAnimation">
                                    <Storyboard>
                                        <Storyboard>
                                            <StaticResource ResourceKey="sbHideLeftMenu"/>
                                        </Storyboard>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.ExitActions>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </StackPanel.Style>
            <Border BorderBrush="Gray" BorderThickness="2" Width="100" Background="White">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseLeave" >
                        <cmd:EventToCommand Command="{Binding BorderMouseLeave}" PassEventArgsToCommand="True" />
                    </i:EventTrigger>
                    <i:EventTrigger EventName="MouseEnter" >
                        <cmd:EventToCommand Command="{Binding BorderMouseEnter}" PassEventArgsToCommand="True" />
                    </i:EventTrigger>
                    <i:EventTrigger EventName="Loaded" >
                        <cmd:EventToCommand Command="{Binding ViewLoaded}" PassEventArgsToCommand="True" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <StackPanel Orientation="Vertical" Margin="3">
                    <DockPanel LastChildFill="False">
                        <Button DockPanel.Dock="Right" Background="Transparent" BorderThickness="0" Name="btnPinPanel" >
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Click" >
                                    <cmd:EventToCommand Command="{Binding PinSet}" PassEventArgsToCommand="True" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <Image Name="imgPinPanel" Source="{Binding PinImageSource}"  Stretch="None" />
                        </Button>
                    </DockPanel>
                    <StackPanel Orientation="Horizontal">
                        <Label Width="60" Content="Rows:" ></Label>
                        <TextBox Width="25" Margin="3" Text="{Binding Rows}" />
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <Label Width="60" Content="Columns:" ></Label>
                        <TextBox Width="25" Margin="3" Text="{Binding Columns}" />
                    </StackPanel>
                    <Slider BorderBrush="White" BorderThickness="2" Minimum="{StaticResource ResourceKey=MinGridCellHeight}" Maximum="1000" TickFrequency="1" 
                                IsSnapToTickEnabled="True" Name="slCellHeight" Value="{Binding CellHeight}" />
                    <StackPanel Orientation="Horizontal">
                        <Label Content="Height:" Width="50" />
                        <TextBox Margin="3" Text="{Binding CellHeight}" ToolTip="Once done, Press Tab " Width="30" Name="txtCellHeight" />
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <Label Content="Width:" Width="50" />
                        <Label Margin="3" Content="{Binding CellWidth}" Width="30" Name="lblCellWidth" />
                    </StackPanel>
                    <Button Command="{Binding ConfigureView}" Visibility="Collapsed">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Content" Value="Configure View" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsGridOn}" Value="True">
                                        <Setter Property="Content" Value="Clear View" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsGridOn}" Value="False">
                                        <Setter Property="Content" Value="Configure View" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <Button Content="Start All" Command="{Binding StartAllCameras}" ></Button>
                    <Button Content="Stop All" Command="{Binding StopAllCameras}" ></Button>
                    <Button Command="{Binding ShowHideHeaders}" >
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Content" Value="Show Headers" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsGridHeaderOn}" Value="True">
                                        <Setter Property="Content" Value="Hide Headers" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsGridHeaderOn}" Value="False">
                                        <Setter Property="Content" Value="Show Headers" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <Button BorderThickness="1" Command="{Binding PushbulletConfiguration}" Margin="1,2,2,2">
                        <Button.Style>
                            <Style TargetType="Button">
                                <Setter Property="BorderBrush" Value="Red"></Setter>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsPushbulletConfigured}" Value="True">
                                        <Setter Property="BorderBrush" Value="Green"></Setter>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                        <StackPanel Width="80">
                            <TextBlock Width="75" TextWrapping="Wrap">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="Text" Value="Please Configure pushbullet to receive pushbullet alerts."></Setter>
                                        <Setter Property="Foreground" Value="Red"></Setter>
                                        <Setter Property="FontWeight" Value="Bold"></Setter>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsPushbulletConfigured}" Value="True">
                                                <Setter Property="Text" Value="Pushbullet is configured"></Setter>
                                                <Setter Property="Foreground" Value="Green"></Setter>
                                                <Setter Property="FontWeight" Value="Normal"></Setter>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </StackPanel>
                    </Button>
                    <Button BorderThickness="1" Command="{Binding EmailConfiguration}" Margin="1,2,2,2">
                        <Button.Style>
                            <Style TargetType="Button">
                                <Setter Property="BorderBrush" Value="Red"></Setter>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsEmailConfigured}" Value="True">
                                        <Setter Property="BorderBrush" Value="Green"></Setter>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                        <StackPanel Width="80">
                            <TextBlock Width="75" TextWrapping="Wrap">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="Text" Value="Please Configure Email to receive Email alerts."></Setter>
                                        <Setter Property="Foreground" Value="Red"></Setter>
                                        <Setter Property="FontWeight" Value="Bold"></Setter>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsEmailConfigured}" Value="True">
                                                <Setter Property="Text" Value="Email is configured"></Setter>
                                                <Setter Property="Foreground" Value="Green"></Setter>
                                                <Setter Property="FontWeight" Value="Normal"></Setter>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </StackPanel>
                    </Button>
                    <Button BorderThickness="1" Command="{Binding DropboxConfiguration}" Margin="1,2,2,2">
                        <Button.Style>
                            <Style TargetType="Button">
                                <Setter Property="BorderBrush" Value="Red"></Setter>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsDropboxConfigured}" Value="True">
                                        <Setter Property="BorderBrush" Value="Green"></Setter>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                        <StackPanel Width="80">
                            <TextBlock Width="75" TextWrapping="Wrap">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="Text" Value="Please Configure Dropbox to receive files on Dropbox."></Setter>
                                        <Setter Property="Foreground" Value="Red"></Setter>
                                        <Setter Property="FontWeight" Value="Bold"></Setter>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsDropboxConfigured}" Value="True">
                                                <Setter Property="Text" Value="Dropbox is configured"></Setter>
                                                <Setter Property="Foreground" Value="Green"></Setter>
                                                <Setter Property="FontWeight" Value="Normal"></Setter>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </StackPanel>
                    </Button>
                    <Border Background="LightGray" BorderThickness="1" BorderBrush="Black">
                        <StackPanel Orientation="Vertical" >
                            <TextBlock TextAlignment="Center" Text="No. of Cameras" ></TextBlock>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Width="60" Text="Maximum:" ></TextBlock>
                                <TextBlock Width="25" Margin="3" Text="{Binding CamerasLicensed}" />
                            </StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Width="60" Text="Running:" ></TextBlock>
                                <TextBlock Width="25" Margin="3" Text="{Binding CamerasRunning}" />
                            </StackPanel>
                        </StackPanel>
                    </Border>
                </StackPanel>
            </Border>
        </StackPanel>
        <StackPanel HorizontalAlignment="Center" VerticalAlignment="Top">
            <ContentControl Content="{Binding VigilantGridVM}" />
        </StackPanel>
    </DockPanel>
</UserControl>
